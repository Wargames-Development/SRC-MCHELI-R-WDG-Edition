buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url = "https://maven.minecraftforge.net" }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'java'

version = "1.0"
group   = "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mcheli"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir  = "eclipse"
}

repositories {
    maven {
        name = "chickenbones"
        url  = "http://chickenbones.net/maven/"
    }
    mavenCentral()
    mavenLocal()
    maven { url = "https://maven.minecraftforge.net" }
}

configurations {
    // Compile-time only (wonâ€™t be packaged)
    provided
    // Bucket for annotation processors (old-Gradle friendly)
    apt
}

dependencies {
    // Dev/runtime deps
    runtime "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    runtime "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    runtime "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"

    // Local libs folder
    compile fileTree(dir: 'lib', include: ['*.jar'])

    // Lombok (compile-time only)
    provided "org.projectlombok:lombok:1.18.30"
    apt      "org.projectlombok:lombok:1.18.30"

    testCompile "junit:junit:4.13.2"
}

// Ensure UTF-8 everywhere (old Gradle-friendly)
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
        '-processor', 'lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
        // or: "-processor", "lombok.launch.AnnotationProcessorHider\\$AnnotationProcessor"
    ]
    classpath += configurations.apt
}


// Put 'provided' on compile classpath but not in the jar
sourceSets {
    main {
        compileClasspath += configurations.provided
    }
    test {
        compileClasspath  += configurations.provided
        runtimeClasspath  += configurations.provided
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
